package wwe.modules.exploits;

import wwe.modules.*;
import wwe.utils.*;
import net.minecraft.entity.*;
import net.minecraft.client.entity.*;
import net.minecraft.init.*;
import net.minecraft.block.properties.*;
import net.minecraft.item.*;
import net.minecraft.block.*;
import java.util.*;
import net.minecraft.block.state.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import net.minecraft.util.*;
import wwe.*;
import net.minecraft.util.math.*;

public class Toxic extends qMIe
{
    public sbfc Xijd;
    public NumberValue range;
    public BlockPos vyON;
    public BlockPos DdWD;
    public Entity cHRE;
    
    public Toxic() {
        super("Toxic", "Sets players on fire", 0, Category.EXPLOITS);
        this.Xijd = new sbfc();
    }
    
    @Override
    public void HrDr() {
        this.range = new NumberValue("Range", this, "Range of placing a block or something", 3.0, 1.0, 6.0);
    }
    
    @oqrr
    public void oRDp(final omqH omqH) {
        this.DdWD = null;
        this.cHRE = null;
        this.vyON = null;
        double doubleValue = this.range.OnGi();
        for (final Entity chre : Wrapper.mc.world.loadedEntityList) {
            if (chre instanceof EntityLivingBase && Wrapper.mc.player.getDistance(chre) < this.range.OnGi()) {
                if (chre instanceof EntityPlayerSP || vlwv.Zqnd().UsVJ(chre.getName())) {
                    continue;
                }
                if (chre.isDead && ((EntityLivingBase)chre).getHealth() > 0.0f) {
                    continue;
                }
                else if (Wrapper.mc.player.getDistance(chre) < doubleValue) {
                    doubleValue = Wrapper.mc.player.getDistance(chre);
                    this.cHRE = chre;
                }
            }
            }
        }
        if (Wrapper.mc.player.getHeldItemMainhand().getItem().equals(Items.BUCKET)) {
            int i;
            final int n = i = (int)Math.ceil(6.0);
            while (i >= -n) {
                int j = -n;
                while (j <= n) {
                    int k = -n;
                    while (k <= n) {
                        final BlockPos vyON = new BlockPos(Wrapper.mc.player.posX + j, Wrapper.mc.player.posY + i, Wrapper.mc.player.posZ + k);
                        if (Wrapper.mc.player.getDistanceSq(vyON) >= n * n) {
                        }
                        else {
                            final IBlockState blockState = Wrapper.mc.world.getBlockState(vyON);
                            if (blockState != null && !(blockState.getBlock() instanceof BlockAir) && blockState.getBlock() instanceof BlockLiquid) {
                                final IBlockState blockState2 = blockState;
                                final BlockLiquid blockLiquid = (BlockLiquid)blockState.getBlock();
                                if ((int)blockState2.getValue((IProperty)BlockLiquid.LEVEL) == 0) {
                                    this.vyON = vyON;
                                    break;
                                }
                        }
                        ++k;
                        }
                    ++j;
                }
                --i;
                }
            }
            if (this.vyON != null) {
                WFux.oAdl(this.vyON);
                return;
            }
        }
        if (this.cHRE == null) {
            return;
        }
        if (Wrapper.mc.player.getHeldItemMainhand().isEmpty()) {
            int l;
            final int n2 = l = (int)Math.ceil(6.0);
            while (l >= -n2) {
                int n3 = -n2;
                while (n3 <= n2) {
                    int n4 = -n2;
                    while (n4 <= n2) {
                        final BlockPos ddWD = new BlockPos(Wrapper.mc.player.posX + n3, Wrapper.mc.player.posY + l, Wrapper.mc.player.posZ + n4);
                        if (Wrapper.mc.player.getDistanceSq(ddWD) >= n2 * n2) {
                        }
                        else {
                            final IBlockState blockState3 = Wrapper.mc.world.getBlockState(ddWD);
                            if (blockState3 != null && !(blockState3.getBlock() instanceof BlockAir) && blockState3.getBlock() instanceof BlockBed && this.cHRE.getDistance((double)ddWD.getX(), (double)ddWD.getY(), (double)ddWD.getZ()) <= 6.0) {
                                this.DdWD = ddWD;
                                }
                                break;
                        }
                        ++n4;
                        }
                    ++n3;
                }
                --l;
                }
            }
            if (this.DdWD != null) {
                omqH.prFd = WFux.Goyn(this.DdWD)[0];
                omqH.OjyD = WFux.Goyn(this.DdWD)[1];
                return;
            }
        }
        if (Wrapper.mc.player.dimension == -1 && Wrapper.mc.player.getHeldItemMainhand().getItem() instanceof ItemBed && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition().add(0, -1, 0)).getBlock() instanceof BlockAir)) {
            omqH.prFd = WFux.Goyn(this.cHRE.getPosition().add(0, -1, 0))[0];
            omqH.OjyD = WFux.Goyn(this.cHRE.getPosition().add(0, -1, 0))[1];
            }
        }
        else if (Wrapper.mc.player.getHeldItemMainhand().getItem().equals(Items.FLINT_AND_STEEL) && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition().add(0, -1, 0)).getBlock() instanceof BlockAir) && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition()).getBlock() instanceof BlockFire) && !this.cHRE.isBurning()) {
            omqH.prFd = WFux.Goyn(this.cHRE.getPosition().add(0, -1, 0))[0];
            omqH.OjyD = WFux.Goyn(this.cHRE.getPosition().add(0, -1, 0))[1];
            }
        }
        else if (Wrapper.mc.player.getHeldItemMainhand().getItem().equals(Items.LAVA_BUCKET) && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition().add(0, -1, 0)).getBlock() instanceof BlockAir) && !this.cHRE.isBurning()) {
            this.ZxFX(this.cHRE, Float.MAX_VALUE, Float.MAX_VALUE);
        }
    }
    
    @oqrr
    public void XFsI(final ILBH ilbh) {
        if (Wrapper.mc.player.getHeldItemMainhand().getItem().equals(Items.BUCKET) && this.vyON != null) {
            Wrapper.mc.player.connection.sendPacket((Packet)new CPacketPlayerTryUseItem(EnumHand.MAIN_HAND));
            LKsL.LInL();
            return;
        }
        if (this.cHRE == null) {
            return;
        }
        if (Wrapper.mc.player.getHeldItemMainhand().isEmpty() && this.DdWD != null) {
            Wrapper.mc.playerController.processRightClickBlock(Wrapper.mc.player, Wrapper.mc.world, this.DdWD, EnumFacing.UP, new Vec3d(0.5, 0.5, 0.5), EnumHand.MAIN_HAND);
            LKsL.LInL();
            return;
        }
        if (Wrapper.mc.player.dimension == -1 && Wrapper.mc.player.getHeldItemMainhand().getItem() instanceof ItemBed && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition().add(0, -1, 0)).getBlock() instanceof BlockAir)) {
            Wrapper.mc.playerController.processRightClickBlock(Wrapper.mc.player, Wrapper.mc.world, this.cHRE.getPosition().add(0, -1, 0), EnumFacing.UP, new Vec3d(0.5, 0.5, 0.5), EnumHand.MAIN_HAND);
            LKsL.LInL();
            }
        }
        else if (Wrapper.mc.player.getHeldItemMainhand().getItem().equals(Items.FLINT_AND_STEEL) && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition().add(0, -1, 0)).getBlock() instanceof BlockAir) && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition()).getBlock() instanceof BlockFire) && !this.cHRE.isBurning()) {
            Wrapper.mc.playerController.processRightClickBlock(Wrapper.mc.player, Wrapper.mc.world, this.cHRE.getPosition().add(0, -1, 0), EnumFacing.UP, new Vec3d(0.5, 0.5, 0.5), EnumHand.MAIN_HAND);
            LKsL.LInL();
            }
        }
        else if (Wrapper.mc.player.getHeldItemMainhand().getItem().equals(Items.LAVA_BUCKET) && !(Wrapper.mc.world.getBlockState(this.cHRE.getPosition().add(0, -1, 0)).getBlock() instanceof BlockAir) && !this.cHRE.isBurning()) {
            Wrapper.mc.player.connection.sendPacket((Packet)new CPacketPlayerTryUseItem(EnumHand.MAIN_HAND));
            LKsL.LInL();
        }
    }
    
    @Override
    public void LPxx() {
        hSNE.lyvR(this);
        super.LPxx();
    }
    
    @Override
    public void qBmy() {
        hSNE.kduK(this);
        super.qBmy();
    }
    
    public void ZxFX(final Entity entity, final float n, final float n2) {
        final double n3 = entity.posX - Wrapper.mc.player.posX;
        final double n4 = entity.posZ - Wrapper.mc.player.posZ;
        double n5;
        if (entity instanceof EntityLivingBase) {
            final EntityLivingBase entityLivingBase = (EntityLivingBase)entity;
            n5 = entityLivingBase.posY + entityLivingBase.getEyeHeight() - (Wrapper.mc.player.posY + Wrapper.mc.player.getEyeHeight());
            }
        }
        else {
            n5 = (entity.getEntityBoundingBox().minY + entity.getEntityBoundingBox().maxY) / 2.0 - (Wrapper.mc.player.posY + Wrapper.mc.player.getEyeHeight());
        }
        final float[] array = { qxzm(Wrapper.mc.player.rotationYaw, (float)(Math.atan2(n4, n3) * 180.0 / 3.141592653589793) - 90.0f, n), qxzm(Wrapper.mc.player.rotationPitch, (float)(-(Math.atan2(n5 - entity.height, MathHelper.sqrt(n3 * n3 + n4 * n4)) * 180.0 / 3.141592653589793)), n2) };
        Wrapper.mc.player.rotationYawHead = array[0];
        Wrapper.mc.player.rotationYaw = array[0];
        Wrapper.mc.player.rotationPitch = array[1];
    }
    
    public static float qxzm(final float n, final float n2, final float n3) {
        float wrapDegrees = MathHelper.wrapDegrees(n2 - n);
        if (wrapDegrees > n3) {
            wrapDegrees = n3;
        }
        if (wrapDegrees < -n3) {
            wrapDegrees = -n3;
        }
        return n + wrapDegrees;
    }
}
