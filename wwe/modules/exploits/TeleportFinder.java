package wwe.modules.exploits;

import wwe.modules.*;
import net.minecraft.network.play.server.*;
import wwe.utils.*;
import net.minecraft.entity.player.*;
import net.minecraft.client.entity.*;
import wwe.modules.movement.*;
import java.text.*;
import java.util.*;
import net.minecraft.entity.*;
import wwe.*;

public class TeleportFinder extends qMIe
{
    public NumberValue give;
    public BooleanValue logToFile;
    
    public TeleportFinder() {
        super("Teleport Finder", "Shows the coords of some one who has teleported", 0, Category.EXPLOITS);
    }
    
    @Override
    public void HrDr() {
        this.give = new NumberValue("Give", this, "Distance from last position", 10.0, 2.0, 50.0);
        this.logToFile = new BooleanValue("Log To File", this, "Puts the information in the Teleport Finder.txt file in your wwe folder", true);
    }
    
    @Override
    public void LPxx() {
        hSNE.lyvR(this);
    }
    
    @Override
    public void qBmy() {
        hSNE.kduK(this);
    }
    
    @oqrr
    public void ngvK(final LqJY lqJY) {
        if (lqJY.MYlK() instanceof SPacketEntityTeleport) {
            final SPacketEntityTeleport sPacketEntityTeleport = (SPacketEntityTeleport)lqJY.MYlK();
            final Entity entityByID = Wrapper.mc.world.getEntityByID(sPacketEntityTeleport.getEntityId());
            if (entityByID != null && entityByID instanceof EntityPlayer && !(entityByID instanceof EntityPlayerSP)) {
                final double n = Math.abs(entityByID.posX) - Math.abs(sPacketEntityTeleport.getX());
                final double n2 = Math.abs(entityByID.posY) - Math.abs(sPacketEntityTeleport.getY());
                final double n3 = Math.abs(entityByID.posZ) - Math.abs(sPacketEntityTeleport.getZ());
                if (Math.sqrt(n * n + n2 * n2 + n3 * n3) > this.give.OnGi()) {
                    HAxG.TuzD(entityByID.getName() + " has teleported to,  X: " + sPacketEntityTeleport.getX() + ", Y: " + sPacketEntityTeleport.getY() + ", Z: " + sPacketEntityTeleport.getZ() + ", " + Speed.rhii(Math.sqrt(n * n + n2 * n2 + n3 * n3), 1) + " blocks away from their last location, " + Speed.rhii(Wrapper.mc.player.getDistance(sPacketEntityTeleport.getX(), sPacketEntityTeleport.getY(), sPacketEntityTeleport.getZ()), 1) + " blocks away from you");
                    if (this.logToFile.OnGi()) {
                        final StringBuilder append = new StringBuilder().append("Name=").append(entityByID.getName()).append(", X=").append(sPacketEntityTeleport.getX()).append(", Y=").append(sPacketEntityTeleport.getY()).append(", Z=").append(sPacketEntityTeleport.getZ()).append(", Blocks Away From Their Last Location=").append(Speed.rhii(Math.sqrt(n * n + n2 * n2 + n3 * n3), 1)).append(", Blocks Away From Your Location=").append(Speed.rhii(Wrapper.mc.player.getDistance(sPacketEntityTeleport.getX(), sPacketEntityTeleport.getY(), sPacketEntityTeleport.getZ()), 1)).append(", Server=");
                        String serverIP;
                        if (Wrapper.mc.isSingleplayer()) {
                            serverIP = "Single Player";
                            if (TeleportFinder.\u2008\u200f) {
                                throw null;
                            }
                        }
                        else {
                            serverIP = Wrapper.mc.getCurrentServerData().serverIP;
                        }
                        Wrapper.ypJK().pMRJ(append.append(serverIP).append(", Current Time=").append(new SimpleDateFormat("MM/dd/yyyy HH:mm:ss").format(new Date())).append("\r\n").toString());
                    }
                }
            }
        }
    }
}
